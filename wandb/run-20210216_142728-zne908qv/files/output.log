/home/naddeok5/.local/lib/python3.6/site-packages/torch/nn/modules/loss.py:446: UserWarning: Using a target size (torch.Size([128])) that is different to the input size (torch.Size([128, 1000])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
Traceback (most recent call last):
  File "vgg_model_trainer.py", line 41, in <module>
    academy.train()
  File "/home/naddeok5/FIM/wandb_academy.py", line 104, in train
    loss = criterion (outputs, labels)        # Calculate loss
  File "/home/naddeok5/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/naddeok5/.local/lib/python3.6/site-packages/torch/nn/modules/loss.py", line 446, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/home/naddeok5/.local/lib/python3.6/site-packages/torch/nn/functional.py", line 2659, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/home/naddeok5/.local/lib/python3.6/site-packages/torch/functional.py", line 71, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore
RuntimeError: The size of tensor a (1000) must match the size of tensor b (128) at non-singleton dimension 1
